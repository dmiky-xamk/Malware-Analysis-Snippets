module;

#include <Windows.h>
import <string>;
import Exception;

export module Helpers;

export namespace Helpers
{
	std::string WStringToString(const std::wstring &wstr)
	{
		int charsCount{ WideCharToMultiByte(CP_UTF8, 0, wstr.c_str(), wstr.length(), NULL, 0, NULL, NULL) };
		std::string output;

		if (charsCount == 0)
		{
			throw Exception("There were no characters to convert into a string", "Helper::WStringToString");
		}

		output.resize(charsCount);
		WideCharToMultiByte(CP_UTF8, 0, wstr.c_str(), wstr.length(), &output[0], charsCount, NULL, NULL);

		if (output.empty())
		{
			throw Exception("The output of the string transformation resulted in an emptry string", "Helper::WStringToString");
		}

		return output;
	}

	std::string GetDllPathWorkingDirectory(const std::string &dllName)
	{
		std::string exePath;
		exePath.resize(MAX_PATH);
		DWORD getPathSuccess{ GetModuleFileNameA(NULL, &exePath[0], MAX_PATH) };

		if (getPathSuccess == 0)
		{
			throw Exception("GetModuleFileNameA failed to get the .exe path.", "GetDllPathWorkingDirectory");
		}

		exePath.resize(MAX_PATH - 1);

		std::string currentFolder = exePath.substr(0, exePath.find_last_of('\\') + 1);
		std::string dllPath = currentFolder + dllName;

		return dllPath;
	}
}