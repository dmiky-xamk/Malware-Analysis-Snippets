module;
#include <Windows.h>
#include <iostream>

#include "../../Classes/Process.h"

import Exception;

export module RemoteThread;

export namespace MW::Execute
{
    // Create a remote thread and execute the injected code (CreateRemoteThread, RtlCreateUserThread, NtCreateThreadEx)
    bool RemoteThread(LPVOID allocatedAddr, const Process &proc, LPVOID parameter = NULL)
    {
        HANDLE hThread{ CreateRemoteThread(proc.getProcHandle(), NULL, 0, reinterpret_cast<LPTHREAD_START_ROUTINE>(allocatedAddr), parameter, 0, NULL) };

        if (!hThread)
        {
            throw Exception("CreateRemoteThread returned NULL", "CreateRemoteThreadAndExecuteCode");
        }

        std::cout << "Created thread succesfully.";

        // Close the handle
        if (hThread)
        {
            CloseHandle(hThread);
        }

        return true;
    }
}